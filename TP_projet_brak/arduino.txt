#include <Servo.h>


/*
 * PIR sensor tester
 */
int pos = 0;
 Servo s ;
int led =13;
int inputPin = 2;               // choose the input pin (for PIR sensor)
int pirState = LOW;             // we start, assuming no motion detected
int val = 0; // variable for reading the pin status
int vt=0; // variable for reading TEMP
int servo_pin=2;
int dc_pin=3;  
int temp_pin=5;
void setup() {
  pinMode(led, OUTPUT);      // declare LED as output
  pinMode(dc_pin, OUTPUT);      // declare DC as output
  pinMode(inputPin, INPUT);     // declare sensor as input
  pinMode(temp_pin, INPUT); 
  s.attach(servo_pin);
  Serial.begin(9600);

}
 
void loop(){
  
vt = analogRead(temp_pin);
float mv = (vt/1024.0)*5000;
float cel = (mv/10)-49;  
float farh = (cel*9)/5+32;
 Serial.println("temperature: ");
 Serial.println(cel);
 
  if(cel>30){
  digitalWrite(dc_pin,1);
  Serial.println("Ventilateur: ON");

    
  } else {
  digitalWrite(dc_pin,0);
     Serial.println("Ventilateur: OFF");
 
  }
  
val = digitalRead(inputPin);  // read input value
         
   Serial.println(val);
     
 if (val == HIGH) {            // check if the input is HIGH
     //map(value, fromLow, fromHigh, toLow, toHigh)

   if (pirState == LOW) {
      // we have just turned on
      Serial.println("Motion detected!");
      Serial.println("OPEN GATE ");
       digitalWrite(led, HIGH);
  
      for (pos = 0; pos <= 180; pos += 1) { // goes from 0 degrees to 180 degrees
    // in steps of 1 degree
    s.write(pos);              // tell servo to go to position in variable 'pos'
    delay(10);                       // waits 15ms for the servo to reach the position
  }
      pirState = HIGH;
     
    }
  } 
  
  else {
    digitalWrite(led, LOW); // turn LED OFF
   if (pirState == HIGH){
      // we have just turned of
      Serial.println("Motion ended!");
      
 for (pos = 180; pos >= 0; pos -= 1) { // goes from 180 degrees to 0 degrees
    s.write(pos);              // tell servo to go to position in variable 'pos'
    delay(10);                       // waits 15ms for the servo to reach the position
  }
      Serial.println("Closed GATE");
      
      // We only want to print on the output change, not state
      pirState = LOW;
    }
  }

  
}